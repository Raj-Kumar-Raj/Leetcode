class Solution {

    public int dfs(int[][] grid, int m , int n , int i , int j , int perimeter){
        if(i<0||j<0||i>=m||j>=n||grid[i][j]==0){
            perimeter++;
            return perimeter;
        }

          if(grid[i][j]==-1)
          return 0;

        grid[i][j]=-1;
    
           return dfs(grid,m , n, i+1, j, perimeter)+
            dfs(grid,m , n, i-1, j, perimeter)+
            dfs(grid,m , n, i, j+1, perimeter)+
           dfs ( grid,m , n, i, j-1, perimeter);
        
    }
    public int islandPerimeter(int[][] grid) {
        int m = grid.length;
        int n =grid[0].length;

        int perimeter=0;
        for(int i =0; i<m; i++){
            for(int j=0; j<n; j++){
                if(grid[i][j]==1){
                perimeter +=  dfs(grid, m , n ,i,j, perimeter);
            
                }
            }
        }
        return perimeter;
    }
}
