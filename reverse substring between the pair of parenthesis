class Solution {
    public String reverseParentheses(String s) {
        Stack<Integer> stack = new Stack<>();
        char[] arr = s.toCharArray();

        // Iterate through the string
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == '(') {
                // Push the index of the opening parenthesis onto the stack
                stack.push(i);
            } else if (arr[i] == ')') {
                // Pop the index of the corresponding opening parenthesis
                int start = stack.pop();
                // Reverse the substring between start and i
                reverse(arr, start + 1, i - 1);
            }
        }

        // Build the final result string
        StringBuilder result = new StringBuilder();
        for (char ch : arr) {
            if (ch != '(' && ch != ')') {
                result.append(ch);
            }
        }

        return result.toString();
    }
    public static void reverse(char[] arr, int left, int right) {
        while (left < right) {
            char temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }    
}
