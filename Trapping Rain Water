class Solution {
    public int trap(int[] height) {
        int left_max [] = new int[height.length];
        int right_max [] = new int[height.length];
        int trapWater = 0;

        // making the array of left maximum at each index 
         left_max[0]= height[0];
        for(int i=1; i<height.length; i++){
            left_max[i]= Math.max(left_max[i-1], height[i]);
        }

         // making the array of right maximum at each index 
        right_max[height.length-1]= height[height.length-1];
        for(int i=height.length-2; i>=0; i--){
            right_max[i]= Math.max(right_max[i+1], height[i]);
        }

        for(int i =0; i<height.length; i++){
            int minHeight = Math.min(left_max[i],right_max[i]);
            trapWater += minHeight-height[i];
        }

        return trapWater;
    }
}
